#!/bin/sh

set -o errexit
set -o nounset

BREW_TAPS="adamv/alt homebrew/dupes homebrew/versions josegonzalez/php"
OS=$(uname -s)

# Get the full path to the current directory.
cwd=$(pwd)
cd $(dirname $0)
root=$(pwd)
cd ${cwd}

# Symlink a bash completion file
bash_completion() {
  completion_file=$1
  completion_dir=/etc/bash_completion.d
  if which brew > /dev/null 2>&1; then
    completion_dir="$(brew --prefix)${completion_dir}"
  fi
  symlink ${completion_file} ${completion_dir}/$(basename ${completion_file})
}

# Print the command we're going to run and (if DRY_RUN is not set) run it.
cmd() {
  echo $*
  if [ ${DRY_RUN:-unset} = "unset" ]; then
    $*
  fi
}

# Ensure a package is installed
pkg() {
  for package_name in $*; do
    case ${OS} in
      (Darwin)
        # Make sure homebrew is installed
        if ! which brew > /dev/null 2>&1; then
          cmd ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/master/Library/Contributions/install_homebrew.rb)"
          for tap in ${BREW_TAPS}; do
            if [ "$(brew tap | grep ${tap})" != "${tap}" ]; then
              cmd brew tap ${tap}
            fi
          done
        fi

        # Adjust the installer, package name and/or compile flags if necessary.
        installer="brew"
        flags=""
        case ${package_name} in
          (boto|httpie|paramiko|tornado)
            installer="pip"
            ;;
          (php)
            package_name=php54
            flags="--with-mysql --with-pgsql --with-fpm --with-intl"
            ;;
          (vagrant)
            installer="gem"
            ;;
        esac

        # Trigger the install
        case ${installer} in
          (brew)
            if ! brew list ${package_name} > /dev/null; then
              cmd brew install ${package_name} ${flags}
            fi
            ;;
          (gem)
            # Make sure the Homebrew ruby is installed first.
            if ! brew list ruby > /dev/null; then
              cmd brew install ruby
            fi

            # Now install the gem if necessary
            if [ "$(gem list ${package_name} | grep ${package_name})" = "" ]; then
              cmd gem install ${package_name}
            fi
            ;;
          (pip)
            if ! which pip > /dev/null 2>&1; then
              if [ ${DRY_RUN:-set} != "set" ]; then
                curl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python
              else
                echo "[Install pip]"
              fi
            fi

            if [ ! -d /Library/Python/2.7/site-packages/${package_name} ]; then
              cmd sudo pip install ${package_name}
            fi
            ;;
          (*)
            # This should be unreachable.
            echo "Invalid installer: ${installer}"
            exit 1
            ;;
        esac
        ;;
      (Linux)
        if [ -f /etc/debian_version ]; then
          case ${package_name} in
            (ctags)
              package_name="exuberant-ctags"
              ;;
          esac
          if ! dpkg -s ${package_name} > /dev/null 2>&1; then
            cmd sudo aptitude install ${package_name}
          fi
        else
          echo "Unsupported Linux variant."
          exit 1
        fi
        ;;
    esac
  done
}

# Symlink a file from this repo.
symlink() {
  file=$1
  if [ $# -gt 1 ]; then
    target=$2
    if [ "$(echo ${target} | grep ^/)" != "${target}" ]; then
      target=${HOME}/${target}
    fi
  else
    target=${HOME}/${file}
  fi
  if [ "$(echo ${file} | grep ^/)" != "${file}" ]; then
    file="${root}/${file}"
  fi
  if [ ! -L ${target} ] || [ $(readlink ${target}) != ${file} ]; then
    cmd ln -fns ${file} ${target}
  fi
}

#
# Now work through all the things we need.
#

# Install the packages we need
pkg bash bash-completion ctags git nmap vim wget
[ ${OS} = "Darwin" ] && pkg boto fontforge go hub httpie mercurial nginx paramiko php ruby tornado vagrant
[ ${OS} != "Darwin" ] && pkg mutt

# Generate .gitconfig
if [ ${DRY_RUN:-set} != "set" ]; then
  sed -e s/___EMAIL___/$(git config user.email || echo conor@mcdermottroe.com)/ ${root}/.gitconfig.template > ${HOME}/.gitconfig
fi

# Now link in the dotfiles
symlink .bash_login
symlink .bashrc
symlink .cvsignore
symlink .inputrc
[ ${OS} != "Darwin" ] && symlink .muttrc
symlink .tcsh
symlink .tcshrc
symlink .vim
symlink .vimrc

# Extra bash completions
bash_completion modules/completion-ruby/completion-bundle
bash_completion modules/completion-ruby/completion-gem
bash_completion modules/completion-ruby/completion-jruby
bash_completion modules/completion-ruby/completion-rails
bash_completion modules/completion-ruby/completion-rake
bash_completion modules/completion-ruby/completion-ruby
bash_completion modules/vagrant-bash-completion/vagrant
bash_completion $(brew --prefix)/Library/Contributions/brew_bash_completion.sh

# Sort out the bin directory
[ -d ${HOME}/bin ] || cmd mkdir ${HOME}/bin
for file in $(find ${root}/bin -type f); do
  symlink ${file} bin/$(basename ${file})
done
symlink modules/git-wip/git-wip bin/git-wip
